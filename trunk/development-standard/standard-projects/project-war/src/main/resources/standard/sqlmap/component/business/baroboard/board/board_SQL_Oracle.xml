<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="board">
	<typeAlias alias="Article" type="standard.mvc.component.business.baroboard.board.vo.Article" />
	<typeAlias alias="SearchArticle" type="standard.mvc.component.business.baroboard.board.vo.SearchArticle" />
	
	<sql id="getMetaField">
		/* getChildNode */
		SELECT A.C_ID
		, A.C_PARENTID
		, A.C_POSITION
		, A.C_LEFT
		, A.C_RIGHT
		, A.C_LEVEL
		, A.C_TITLE
		, A.C_TYPE
		/* user filed add point*/
	</sql>
	<sql id="getInlineChildCount">
		, ( SELECT CASE
		WHEN COUNT(*) &gt; 0 THEN 'InChild'
		ELSE
		'NoChild'
		END AS YesNo
		/* inline table from filed add point*/
	</sql>
	<sql id="getInlineChildCountAfterFrom">
		WHERE B.C_PARENTID = A.C_ID
		) AS childcount
		/* table from filed add point*/
	</sql>
	<sql id="getAfterFrom">
		WHERE A.C_PARENTID = #c_id#
		ORDER BY A.C_POSITION ASC
	</sql>
	
	<select id="getChildNode" parameterClass="Article"
		resultClass="Article">
		<dynamic>
			<include refid="getMetaField" />
			/* user fields */
			<include refid="getInlineChildCount" />
			/* inline table from filed*/
			FROM T_BOARD_TEST B
			<include refid="getInlineChildCountAfterFrom" />
			/* table from filed*/
			, #boardID# as boardID
			FROM T_BOARD_TEST A
			<include refid="getAfterFrom" />
		</dynamic>
	</select>


	<select id="getChildNodeByLeftRight" parameterClass="Article"
		resultClass="Article">
		/* getChildNodeByLeftRight */
		SELECT C_ID
			, C_PARENTID
			, C_POSITION
			, C_LEFT
			, C_RIGHT
			, C_LEVEL
			, C_TITLE
			, C_TYPE
		FROM T_BOARD_TEST
		WHERE C_LEFT &gt;= #c_left#
			AND C_RIGHT &lt;= #c_right#
		ORDER BY C_LEFT ASC
	</select>


	<select id="searchNodeByString" parameterClass="Article"
		resultClass="Article">
		/* searchNodeByString */
		SELECT c_left
			, c_right
		FROM T_BOARD_TEST
		WHERE C_TITLE LIKE '%'||#searchStr#||'%'
	</select>


	<select id="searchNodeByPosition" parameterClass="java.util.List"
		resultClass="String">
		/* searchNodeByPosition */
		SELECT DISTINCT C_ID
		FROM T_BOARD_TEST
		WHERE 1=1
		<iterate prepend="AND" open="(" close=")" conjunction="OR">
			( C_LEFT
			&lt;= #[].c_left# AND C_RIGHT &gt;= #[].c_right# )
		</iterate>
	</select>


	<update id="alterNode" parameterClass="Article">
		/* alterNode */
		UPDATE T_BOARD_TEST
		SET C_TYPE = #c_type#
			, C_TITLE = #c_title#
			, C_REG_ID = #regId# 			
			, C_CONTENT = #content# 
			, C_ALLOW_TRACKBACK_FL = #allowTrackbackFL#			
			, C_ALLOW_COMMENT_FL = #allowCommentFL#	
			, C_ALLOW_REPLY_FL = #allowReplyFL#	
			, C_ALERT_RESPONSE_FL = #alertResponseFL#
			, C_OPEN_ARTICLE_FL = #openArticleFL# 	
			, C_ANNOUNCEMENT_FL = #announcementFL# 	
			, C_VIEW_CNT = #viewCnt# 			
			, C_IS_DELETED_FL = #isDeletedFL#		
			, C_REG_DT = #regDt# 				
			, C_MOD_DT = #modDt# 			
		WHERE C_ID = #c_id#
	</update>


	<select id="getNode" parameterClass="Article"
		resultClass="Article">
		/* getNode */
		<dynamic>
			<include refid="getMetaField" />
			/* user fields */
			, A.C_REG_ID as regId 			
			, A.C_CONTENT as content 			
			, A.C_ALLOW_COMMENT_FL as allowCommentFL	
			, A.C_ALLOW_REPLY_FL as allowReplyFL	
			, A.C_ALERT_RESPONSE_FL as alertResponseFL
			, A.C_OPEN_ARTICLE_FL as openArticleFL 	
			, A.C_ANNOUNCEMENT_FL as announcementFL 	
			, A.C_VIEW_CNT as viewCnt 			
			, A.C_IS_DELETED_FL as isDeletedFL		
			, A.C_REG_DT as regDt 				
			, A.C_MOD_DT as modDt 
		FROM T_BOARD_TEST A
		WHERE C_ID = #c_id#
		</dynamic>
	</select>


	<select id="getNodeByRef" parameterClass="Article"
		resultClass="Article">
		<dynamic>
		/* getNodeByRef */
			<include refid="getMetaField" />
			/* user fields */
			, A.C_REG_ID 							
			, A.C_CONTENT 						
			, A.C_ALLOW_COMMENT_FL	
			, A.C_ALLOW_REPLY_FL 		
			, A.C_ALERT_RESPONSE_FL 	
			, A.C_OPEN_ARTICLE_FL 		
			, A.C_ANNOUNCEMENT_FL 	
			, A.C_VIEW_CNT 					
			, A.C_IS_DELETED_FL				
			, A.C_REG_DT 						
			, A.C_MOD_DT 
		FROM T_BOARD_TEST A
		WHERE C_ID = #ref#
		</dynamic>
	</select>


	<delete id="removeNode" parameterClass="Article">
		/* removeNode */
		DELETE
		FROM T_BOARD_TEST
		WHERE C_LEFT &gt;= #c_left#
			AND C_RIGHT	&lt;= #c_right#
	</delete>


	<update id="removedAfterLeftFix" parameterClass="Article">
		/* removedAfterLeftFix */
		UPDATE T_BOARD_TEST
		SET C_LEFT = C_LEFT - #spaceOfTargetNode#
		WHERE C_LEFT &gt; #c_right#
	</update>


	<update id="removedAfterRightFix" parameterClass="Article">
		/* removedAfterRightFix */
		UPDATE T_BOARD_TEST
		SET C_RIGHT = C_RIGHT - #spaceOfTargetNode#
		WHERE C_RIGHT &gt; #c_left#
	</update>


	<update id="removedAfterPositionFix" parameterClass="Article">
		/* removedAfterPositionFix */
		UPDATE T_BOARD_TEST
		SET	C_POSITION = C_POSITION - 1
		WHERE C_PARENTID = #c_parentid#
			AND	C_POSITION &gt; #c_position#
	</update>


	<select id="analyzeRootNode" resultClass="Article">
		/* searchNodeByString */
		SELECT C_LEFT
		FROM T_BOARD_TEST
		WHERE C_PARENTID = 0
	</select>


	<update id="cutMyselfPositionFix" parameterClass="Article">
		/* cutMyselfPositionFix moveNode case. parameterClass is nodeById*/
		UPDATE T_BOARD_TEST
		SET C_POSITION = C_POSITION - 1
		WHERE C_PARENTID = #c_parentid#
			AND C_POSITION &gt;	#c_position#
	</update>


	<update id="cutMyselfLeftFix" parameterClass="Article">
		/* cutMyselfLeftFix moveNode case. parameterClass is nodeById*/
		UPDATE T_BOARD_TEST
		SET C_LEFT = C_LEFT - #spaceOfTargetNode#
		WHERE C_LEFT &gt; #c_right#
	</update>


	<update id="cutMyselfRightFix" parameterClass="Article">
		/* cutMyselfRightFix moveNode case. parameterClass is nodeById*/
		UPDATE T_BOARD_TEST
		SET C_RIGHT = C_RIGHT - #spaceOfTargetNode#
		WHERE C_RIGHT &gt; #c_left#
		<iterate prepend="AND C_ID NOT IN" property="c_idsByChildNodeFromNodeById"
			open="(" close=")" conjunction=",">
			#c_idsByChildNodeFromNodeById[]#
		</iterate>
	</update>


	<update id="stretchPositionForMyself" parameterClass="Article">
		/* stretchPositionForMyselfFromJstree */
		UPDATE T_BOARD_TEST
		SET C_POSITION = C_POSITION + 1
		WHERE C_PARENTID = #ref# AND C_POSITION &gt;= #c_position#
		<isEqual property="copy" compareValue="0">
			AND C_ID NOT IN
			<isEmpty property="c_idsByChildNodeFromNodeById">
				(-1)
			</isEmpty>
			<isNotEmpty property="c_idsByChildNodeFromNodeById">
				<iterate property="c_idsByChildNodeFromNodeById" open="(" close=")" conjunction=",">
					#c_idsByChildNodeFromNodeById[]#
				</iterate>
			</isNotEmpty>
		</isEqual>
	</update>


	<update id="stretchLeftForMyselfFromJstree" parameterClass="Article">
		/* stretchLeftForMyselfFromJstree */
		UPDATE T_BOARD_TEST
		SET C_LEFT = C_LEFT + #spaceOfTargetNode#
		WHERE C_LEFT &gt;= #rightPositionFromNodeByRef#
		<isEqual property="copy" compareValue="0">
			<isNotEmpty property="c_idsByChildNodeFromNodeById">
				<iterate prepend="AND C_ID NOT IN" property="c_idsByChildNodeFromNodeById"
					open="(" close=")" conjunction=",">
					#c_idsByChildNodeFromNodeById[]#
				</iterate>
			</isNotEmpty>
		</isEqual>
	</update>


	<update id="stretchRightForMyselfFromJstree" parameterClass="Article">
		/* stretchRightForMyselfFromJstree */
		UPDATE T_BOARD_TEST
		SET C_RIGHT = C_RIGHT + #spaceOfTargetNode#
		WHERE C_RIGHT &gt;= #rightPositionFromNodeByRef#
		<isEqual property="copy" compareValue="0">
			<isNotEmpty property="c_idsByChildNodeFromNodeById">
				<iterate prepend="AND C_ID NOT IN" property="c_idsByChildNodeFromNodeById"
					open="(" close=")" conjunction=",">
					#c_idsByChildNodeFromNodeById[]#
				</iterate>
			</isNotEmpty>
		</isEqual>
	</update>


	<insert id="pasteMyselfFromJstree" parameterClass="Article">
		/* pasteMyselfFromJstree */
		INSERT INTO T_BOARD_TEST (
		C_ID, C_PARENTID, C_POSITION,
		C_LEFT, C_RIGHT, C_LEVEL, C_TITLE, C_TYPE
		)
		SELECT S_BOARD_TEST.NEXTVAL AS C_ID
		, A.*
		FROM (
			SELECT
			#ref# AS C_PARENTID
			, C_POSITION
			, C_LEFT - #idifLeft# AS C_LEFT
			, C_RIGHT -	#idifRight# AS C_RIGHT
			, C_LEVEL - #ldif# AS C_LEVEL
			, C_TITLE
			, C_TYPE
			FROM T_BOARD_TEST
			<iterate prepend="WHERE C_ID IN" property="c_idsByChildNodeFromNodeById"
				open="(" close=")" conjunction=",">
				#c_idsByChildNodeFromNodeById[]#
			</iterate>
			ORDER BY C_LEVEL DESC
		) A
		<selectKey resultClass="java.lang.Integer">
			/* pasteMyselfFromJstree SEQ */
			SELECT S_BOARD_TEST.CURRVAL AS SEQ
			FROM DUAL
		</selectKey>
	</insert>


	<update id="enterMyselfFixPosition" parameterClass="Article">
		/* enterMyselfFixPosition */
		UPDATE T_BOARD_TEST
		SET	C_PARENTID = #ref#
			, C_POSITION = #c_position#
		WHERE C_ID = #c_id#
	</update>


	<update id="enterMyselfFixLeftRight" parameterClass="Article">
		/* enterMyselfFixLeftRight */
		UPDATE T_BOARD_TEST
		SET	C_LEFT = C_LEFT - (#idif#)
			, C_RIGHT = C_RIGHT - (#idif#)
			, C_LEVEL =
		C_LEVEL - (#ldif#)
		<iterate prepend="WHERE C_ID IN" property="c_idsByChildNodeFromNodeById"
			open="(" close=")" conjunction=",">
			#c_idsByChildNodeFromNodeById[]#
		</iterate>
	</update>


	<insert id="addMyselfFromJstree" parameterClass="Article">
		/* addMyselfFromJstree */
		INSERT INTO T_BOARD_TEST (
		C_ID, C_PARENTID, C_POSITION,
		C_LEFT, C_RIGHT, C_LEVEL )
		VALUES (
		S_BOARD_TEST.NEXTVAL, #c_parentid#, #c_position#,
		#c_left#, #c_right#, #c_level# )
		<selectKey resultClass="java.lang.Integer">
			/* addMyselfFromJstree SEQ */
			SELECT S_BOARD_TEST.CURRVAL AS SEQ
			FROM DUAL
		</selectKey>
	</insert>


	<update id="alterNodeType" parameterClass="Article">
		/* alterNodeType */
		UPDATE T_BOARD_TEST
		SET C_TYPE = #c_type#
		WHERE C_ID = #c_id#
	</update>


	<update id="fixCopyIF" parameterClass="Article">
		/* fixCopyIF */
		UPDATE T_BOARD_TEST
		SET C_POSITION = #fixCopyPosition#
		WHERE C_ID = #fixCopyId#
	</update>


	<update id="fixCopy" parameterClass="Article">
		/* fixCopy */
		UPDATE T_BOARD_TEST
		SET C_PARENTID = #fixCopyId#
		WHERE C_ID = #c_id#
	</update>
	
	<select id="getArticleListByPage" parameterClass="Article" resultClass="Article">
		/* getArticleListByPage */
		<dynamic>
			<include refid="getMetaField" />
				, A.C_TITLE as c_title
				, A.C_REG_ID as regId 			
				, A.C_CONTENT as content 			
				, A.C_ALLOW_COMMENT_FL as allowCommentFL	
				, A.C_ALLOW_REPLY_FL as allowReplyFL	
				, A.C_ALERT_RESPONSE_FL as alertResponseFL
				, A.C_OPEN_ARTICLE_FL as openArticleFL 	
				, A.C_ANNOUNCEMENT_FL as  	
				, A.C_VIEW_CNT as viewCnt 			
				, A.C_IS_DELETED_FL as isDeletedFL		
				, A.C_REG_DT as regDt 				
				, A.C_MOD_DT as modDt 				
			/* 페이징 처리 */	
			FROM (
				SELECT ROWNUM AS RNUM, Z.* FROM (
					SELECT * 
					FROM T_BOARD_TEST Y
					WHERE 1=1
						AND Y.C_LEVEL = 2
						AND Y.C_OPEN_ARTICLE_FL = '1'
						AND Y.C_ANNOUNCEMENT_FL = '0'
					ORDER BY C_ID DESC 
				) Z WHERE ROWNUM &lt;= (#pageNum# * #pageSize#)
			) A
			WHERE RNUM &gt;= (1 + ((#pageNum# - 1) * #pageSize#))
		</dynamic>
	</select>
	
	<select id="getAnnounceList" parameterClass="Article" resultClass="Article">
		/* getAnnounceList */
		<dynamic>
			<include refid="getMetaField" />
				, A.C_TITLE as c_title
				, A.C_REG_ID as regId 			
				, A.C_CONTENT as content 			
				, A.C_ALLOW_COMMENT_FL as allowCommentFL	
				, A.C_ALLOW_REPLY_FL as allowReplyFL	
				, A.C_ALERT_RESPONSE_FL as alertResponseFL
				, A.C_OPEN_ARTICLE_FL as openArticleFL 	
				, A.C_ANNOUNCEMENT_FL as announcementFL 	
				, A.C_VIEW_CNT as viewCnt 			
				, A.C_IS_DELETED_FL as isDeletedFL		
				, A.C_REG_DT as regDt 				
				, A.C_MOD_DT as modDt 				
			FROM T_BOARD_TEST A
			WHERE 1=1
				AND A.C_ANNOUNCEMENT_FL = '1'
				AND A.C_OPEN_ARTICLE_FL = '1'
			ORDER BY
				A.C_REG_DT ASC
		</dynamic>
	</select>
	
	<select id="getOpenArticleCnt" parameterClass="Article" resultClass="int">
		SELECT COUNT(1) 
		FROM T_BOARD_TEST 
		WHERE 1=1
			AND C_OPEN_ARTICLE_FL = '1'
		 	AND C_LEVEL = 2
	</select>
	
	
	<select id="searchArticle" parameterClass="SearchArticle" resultClass="Article">
		/* searchArticle */
		<dynamic>
			<include refid="getMetaField" />
				, A.C_TITLE as c_title
				, A.C_REG_ID as regId 			
				, A.C_CONTENT as content 			
				, A.C_ALLOW_COMMENT_FL as allowCommentFL	
				, A.C_ALLOW_REPLY_FL as allowReplyFL	
				, A.C_ALERT_RESPONSE_FL as alertResponseFL
				, A.C_OPEN_ARTICLE_FL as openArticleFL 	
				, A.C_ANNOUNCEMENT_FL as  	
				, A.C_VIEW_CNT as viewCnt 			
				, A.C_IS_DELETED_FL as isDeletedFL		
				, A.C_REG_DT as regDt 				
				, A.C_MOD_DT as modDt 				
			FROM T_BOARD_TEST A
			WHERE 1=1
				AND A.C_LEVEL = 2
				AND A.C_OPEN_ARTICLE_FL = '1'
				AND A.C_ANNOUNCEMENT_FL = '0'
				<isEqual property="type" compareValue="title">
				AND A.C_TITLE LIKE '%' || #searchKeyword# || '%'
				</isEqual>
				<isEqual property="type" compareValue="content">
				AND DBMS_LOB.INSTR(A.C_CONTENT, #searchKeyword#) &lt;&gt; 0 
				</isEqual>
				<isEqual property="type" compareValue="title_content">
				AND (
					A.C_TITLE LIKE '%' || #searchKeyword# || '%'
					OR
					DBMS_LOB.INSTR(A.C_CONTENT, #searchKeyword#) &lt;&gt; 0
				)
				</isEqual>
				<isEqual property="type" compareValue="nickName">
				
				</isEqual>
				<isEqual property="type" compareValue="date_rage">
				
				</isEqual>
		</dynamic>
	</select>
</sqlMap>