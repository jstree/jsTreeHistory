<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="user">
    <typeAlias alias="User" type="standard.mvc.component.business.baroboard.user.vo.User" />

    <select id="getChildNode" parameterClass="User" resultClass="User">
        /* getChildNode */
		SELECT A.C_ID
		     , A.C_PARENTID
		     , A.C_POSITION
		     , A.C_LEFT
		     , A.C_RIGHT
		     , A.C_LEVEL
		     , A.C_TITLE
		     , A.C_TYPE
		     , A.C_USER_GRADE_CD AS userGradeCd
		     , (SELECT C_TITLE FROM T_USER_GRADE_MANAGE WHERE C_ID = A.C_USER_GRADE_CD) AS userGrade
		     , A.C_JOIN_STATE_CD AS joinStateCd
		     , (SELECT C_TITLE FROM T_USER_JOIN_STATE WHERE C_ID = A.C_JOIN_STATE_CD) AS joinState
		     , A.C_EMAIL AS email
		     , A.C_JOIN_DT AS joinDt
		     , SUBSTR(A.C_JOIN_DT, 1, 8) AS joinDe
		     , A.C_LAST_LOGIN_DT AS lastLoginDt
		     , SUBSTR(A.C_LAST_LOGIN_DT, 1, 8) AS lastLoginDe
		     , ( SELECT CASE
		                    WHEN COUNT(*) &gt; 0 THEN 'InChild'
		                ELSE 'NoChild'
		              END AS YesNo
		           FROM T_USER_INFO B
		          WHERE B.C_PARENTID = A.C_ID
		       ) AS childcount
		  FROM T_USER_INFO A
		 WHERE A.C_PARENTID = #c_id#
		 <isNotEmpty property="email">
		   AND A.C_EMAIL LIKE '%' || #email# || '%'
		 </isNotEmpty>
		 <isNotEmpty property="c_title">
		   AND A.C_TITLE LIKE '%' || #c_title# || '%'
		 </isNotEmpty>
		 <isNotEqual property="userGradeCd" compareValue="0">
		   AND A.C_USER_GRADE_CD = #userGradeCd#
		 </isNotEqual>
		 <isEqual property="joinApprovalFl" compareValue="0">
		   AND A.C_JOIN_STATE_CD = 3 /*가입승인요청*/
		 </isEqual>
		 <isEqual property="joinApprovalFl" compareValue="1">
		   AND A.C_JOIN_STATE_CD = 4 /*가입완료*/
		 </isEqual>
		 <isNotEmpty property="joinDeBegi">
		   AND SUBSTR(A.C_JOIN_DT, 1, 8) &gt;= #joinDeBegi#
		 </isNotEmpty>
		 <isNotEmpty property="joinDeEnd">
		   AND SUBSTR(A.C_JOIN_DT, 1, 8) &lt;= #joinDeEnd#
		 </isNotEmpty>
		 <isNotEmpty property="loginDeBegi">
		   AND SUBSTR(A.C_LAST_LOGIN_DT, 1, 8) &gt;= #loginDeBegi#
		 </isNotEmpty>
		 <isNotEmpty property="loginDeEnd">
		   AND SUBSTR(A.C_LAST_LOGIN_DT, 1, 8) &lt;= #loginDeEnd#
		 </isNotEmpty>
		ORDER BY A.C_POSITION ASC
    </select>


    <select id="getChildNodeByLeftRight" parameterClass="User" resultClass="User">
        /* getChildNodeByLeftRight */
        SELECT C_ID
		     , C_PARENTID
		     , C_POSITION
		     , C_LEFT
		     , C_RIGHT
		     , C_LEVEL
		     , C_TITLE
		     , C_TYPE
		     , C_USER_GRADE_CD AS userGradeCd
		     , C_JOIN_STATE_CD AS joinStateCd
		     , C_EMAIL AS email
		     , C_JOIN_DT AS joinDt
		     , ( SELECT MAX(C_LOGIN_DT)
		           FROM T_USER_LOGIN_STATE
		          WHERE C_USER_ID = A.C_ID
		       ) AS loginDt
          FROM T_USER_INFO A
         WHERE C_LEFT &gt;= #c_left# 
           AND C_RIGHT &lt;= #c_right# 
      ORDER BY C_LEFT ASC
    </select>


    <select id="searchNodeByString" parameterClass="User" resultClass="User">
        /* searchNodeByString */
        SELECT C_LEFT
             , C_RIGHT
          FROM T_USER_INFO
         WHERE C_TITLE LIKE '%'||#searchStr#||'%' 
    </select>


    <select id="searchNodeByPosition" parameterClass="java.util.List" resultClass="String">
        /* searchNodeByPosition */
        SELECT DISTINCT C_ID
          FROM T_USER_INFO
         WHERE 1=1
        <iterate prepend="AND" open="(" close=")" conjunction="OR">
            ( C_LEFT &lt;= #[].c_left# AND C_RIGHT &gt;= #[].c_right# )
        </iterate>
    </select>


    <update id="alterNode" parameterClass="User">
        /* alterNode */
        UPDATE T_USER_INFO
           SET C_TYPE = #c_type#
             , C_TITLE = #c_title#
             , C_USER_GRADE_CD = #userGradeCd#
             , C_JOIN_STATE_CD = #joinStateCd#
             , C_PASSWORD = #password#
             , C_EMAIL = #email#
             , C_LOGIN_FAILURE_CNT = #loginFailureCnt#
             , C_PASSWORD_FIND_QUESTION = #passwordFindQuestion#
             , C_PASSWORD_FIND_ANSWER = #passwordFindAnswer#
             , C_MAILING_SERVICE_USE_FL = #mailingServiceUseFl#
             , C_INDI_INFO_OPEN_FL = #indiInfoOpenFl#
             , C_JOIN_DT = #joinDt#
             , C_PASSWORD_CHANGE_DT = #passwordChangeDt#
             , C_HOMEPAGE_URL = #homepageUrl#
             , C_BLOG_URL = #blogUrl#
             , C_SIGN = #sign#
             , C_PROFILE_PHOTO = #profilePhoto#
             , C_IMAGE_ICON = #imageIcon#
         WHERE C_ID = #c_id#
    </update>


    <select id="getNode" parameterClass="User" resultClass="User">
        /* getNode */
        SELECT C_ID
             , C_PARENTID
             , C_POSITION
             , C_LEFT
             , C_RIGHT
             , C_LEVEL
             , C_TITLE
             , C_TYPE
             , C_USER_GRADE_CD AS userGradeCd
             , C_JOIN_STATE_CD AS joinStateCd
             , C_PASSWORD AS password
             , C_EMAIL AS email
             , C_LOGIN_FAILURE_CNT AS loginFailureCnt
             , C_PASSWORD_FIND_QUESTION AS passwordFindQuestion
             , C_PASSWORD_FIND_ANSWER AS passwordFindAnswer
             , C_MAILING_SERVICE_USE_FL AS mailingServiceUseFl
             , C_INDI_INFO_OPEN_FL AS indiInfoOpenFl
             , C_JOIN_DT AS joinDt
             , C_PASSWORD_CHANGE_DT AS passwordChangeDt
             , C_HOMEPAGE_URL AS homepageUrl
             , C_BLOG_URL AS blogUrl
             , C_SIGN AS sign
             , C_PROFILE_PHOTO AS profilePhoto
             , C_IMAGE_ICON AS imageIcon
          FROM T_USER_INFO 
         WHERE C_ID = #c_id#
    </select>


    <select id="getNodeByRef" parameterClass="User" resultClass="User">
        /* getNodeByRef */
        SELECT C_ID
             , C_PARENTID
             , C_POSITION
             , C_LEFT
             , C_RIGHT
             , C_LEVEL
             , C_TITLE
             , C_TYPE
             , C_USER_GRADE_CD AS userGradeCd
             , C_JOIN_STATE_CD AS joinStateCd
             , C_PASSWORD AS password
             , C_EMAIL AS email
             , C_LOGIN_FAILURE_CNT AS loginFailureCnt
             , C_PASSWORD_FIND_QUESTION AS passwordFindQuestion
             , C_PASSWORD_FIND_ANSWER AS passwordFindAnswer
             , C_MAILING_SERVICE_USE_FL AS mailingServiceUseFl
             , C_INDI_INFO_OPEN_FL AS indiInfoOpenFl
             , C_JOIN_DT AS joinDt
             , C_PASSWORD_CHANGE_DT AS passwordChangeDt
             , C_HOMEPAGE_URL AS homepageUrl
             , C_BLOG_URL AS blogUrl
             , C_SIGN AS sign
             , C_PROFILE_PHOTO AS profilePhoto
             , C_IMAGE_ICON AS imageIcon
          FROM T_USER_INFO 
         WHERE C_ID = #ref#
    </select>


    <delete id="removeNode" parameterClass="User">
        /* removeNode */
           DELETE FROM T_USER_INFO 
                 WHERE C_LEFT  &gt;= #c_left#
                   AND C_RIGHT &lt;= #c_right#
    </delete>
    
    
    <update id="removedAfterLeftFix" parameterClass="User">
        /* removedAfterLeftFix */
           UPDATE T_USER_INFO 
             SET C_LEFT = C_LEFT - #spaceOfTargetNode# 
             WHERE C_LEFT &gt; #c_right#
    </update>
    
    
    <update id="removedAfterRightFix" parameterClass="User">
        /* removedAfterRightFix */
        UPDATE T_USER_INFO 
           SET C_RIGHT = C_RIGHT - #spaceOfTargetNode# 
         WHERE C_RIGHT &gt; #c_left#
    </update>
    
    
    <update id="removedAfterPositionFix" parameterClass="User">
        /* removedAfterPositionFix */
         UPDATE T_USER_INFO 
            SET C_POSITION = C_POSITION - 1 
          WHERE C_PARENTID = #c_parentid# 
            AND C_POSITION &gt; #c_position#
    </update>


    <select id="analyzeRootNode" resultClass="User">
        /* analyzeRootNode */
        SELECT C_LEFT 
          FROM T_USER_INFO 
         WHERE C_PARENTID = 0
    </select>


    <update id="cutMyselfPositionFix" parameterClass="User">
        /* cutMyselfPositionFix */
           UPDATE T_USER_INFO 
              SET C_POSITION = C_POSITION - 1 
            WHERE C_PARENTID = #c_parentid# 
           AND C_POSITION &gt; #c_position#
    </update>


    <update id="cutMyselfLeftFix" parameterClass="User">
        /* cutMyselfLeftFix */
           UPDATE T_USER_INFO 
              SET C_LEFT = C_LEFT - #spaceOfTargetNode# 
         WHERE C_LEFT &gt; #c_right#
    </update>
    
    
    <update id="cutMyselfRightFix" parameterClass="User">
        /* cutMyselfRightFix */
           UPDATE T_USER_INFO 
              SET C_RIGHT = C_RIGHT - #spaceOfTargetNode# 
            WHERE C_RIGHT &gt; #c_left#
        <iterate prepend="AND C_ID NOT IN" property="c_idsByChildNodeFromNodeById" open="(" close=")" conjunction=",">
               #c_idsByChildNodeFromNodeById[]#
        </iterate>
    </update>


    <update id="stretchPositionForMyself" parameterClass="User">
        /* stretchPositionForMyselfFromJstree */
        UPDATE T_USER_INFO
           SET C_POSITION = C_POSITION + 1
         WHERE C_PARENTID = #ref# AND C_POSITION &gt;= #c_position#
        <isEqual property="copy" compareValue="0">
           AND C_ID NOT IN
            <isEmpty property="c_idsByChildNodeFromNodeById">
                           (-1)
            </isEmpty>
            <isNotEmpty property="c_idsByChildNodeFromNodeById">
                <iterate property="c_idsByChildNodeFromNodeById" open="(" close=")" conjunction=",">
                           #c_idsByChildNodeFromNodeById[]#
                </iterate>
            </isNotEmpty>
        </isEqual>
    </update>


    <update id="stretchLeftForMyselfFromJstree" parameterClass="User">
        /* stretchLeftForMyselfFromJstree */
           UPDATE T_USER_INFO 
              SET C_LEFT = C_LEFT + #spaceOfTargetNode# 
            WHERE C_LEFT &gt;= #rightPositionFromNodeByRef#
        <isEqual property="copy" compareValue="0">
            <isNotEmpty property="c_idsByChildNodeFromNodeById">
                <iterate prepend="AND C_ID NOT IN" property="c_idsByChildNodeFromNodeById" open="(" close=")" conjunction=",">
                    #c_idsByChildNodeFromNodeById[]#
                </iterate>
            </isNotEmpty>
        </isEqual>
    </update>


    <update id="stretchRightForMyselfFromJstree" parameterClass="User">
        /* stretchRightForMyselfFromJstree */
        UPDATE T_USER_INFO 
           SET C_RIGHT = C_RIGHT + #spaceOfTargetNode# 
         WHERE C_RIGHT &gt;= #rightPositionFromNodeByRef#
        <isEqual property="copy" compareValue="0">
            <isNotEmpty property="c_idsByChildNodeFromNodeById">
                <iterate prepend="AND C_ID NOT IN" property="c_idsByChildNodeFromNodeById" open="(" close=")" conjunction=",">
               #c_idsByChildNodeFromNodeById[]#
                </iterate>
            </isNotEmpty>
        </isEqual>
    </update>


    <insert id="pasteMyselfFromJstree" parameterClass="User">
        /* pasteMyselfFromJstree */
        INSERT INTO T_USER_INFO ( C_ID, C_PARENTID, C_POSITION, C_LEFT, C_RIGHT, C_LEVEL, C_TITLE, C_TYPE, C_USER_GRADE_CD, C_JOIN_STATE_CD, C_PASSWORD, C_EMAIL, C_LOGIN_FAILURE_CNT, C_PASSWORD_FIND_QUESTION, C_PASSWORD_FIND_ANSWER, C_MAILING_SERVICE_USE_FL, C_INDI_INFO_OPEN_FL, C_JOIN_DT, C_PASSWORD_CHANGE_DT, C_HOMEPAGE_URL, C_BLOG_URL, C_SIGN, C_PROFILE_PHOTO, C_IMAGE_ICON ) 
        SELECT S_USER_INFO.NEXTVAL AS C_ID
             , A.*
             FROM (
                SELECT #ref#
                     , C_POSITION
                     , C_LEFT  - #idifLeft#  AS C_LEFT
                     , C_RIGHT - #idifRight# AS C_RIGHT
                     , C_LEVEL - #ldif#      AS C_LEVEL
                     , C_TITLE
                     , C_TYPE
                     , C_USER_GRADE_CD
                     , C_JOIN_STATE_CD
                     , C_PASSWORD
                     , C_EMAIL
                     , C_LOGIN_FAILURE_CNT
                     , C_PASSWORD_FIND_QUESTION
                     , C_PASSWORD_FIND_ANSWER
                     , C_MAILING_SERVICE_USE_FL
                     , C_INDI_INFO_OPEN_FL
                     , C_JOIN_DT
                     , C_PASSWORD_CHANGE_DT
                     , C_HOMEPAGE_URL
                     , C_BLOG_URL
                     , C_SIGN
                     , C_PROFILE_PHOTO
                     , C_IMAGE_ICON
                  FROM T_USER_INFO 
        <iterate prepend="WHERE C_ID IN" property="c_idsByChildNodeFromNodeById" open="(" close=")" conjunction=",">
                       #c_idsByChildNodeFromNodeById[]#
        </iterate>
              ORDER BY C_LEVEL DESC
               ) A
        <selectKey resultClass="java.lang.Integer">
            /* pasteMyselfFromJstree SEQ */
            SELECT S_USER_INFO.CURRVAL AS SEQ 
              FROM DUAL
        </selectKey>
    </insert>


    <update id="enterMyselfFixPosition" parameterClass="User">
        /* enterMyselfFixPosition */
        UPDATE T_USER_INFO 
           SET C_PARENTID = #ref#
             , C_POSITION = #c_position# 
         WHERE C_ID = #c_id#
    </update>
    
    
    <update id="enterMyselfFixLeftRight" parameterClass="User">
        /* enterMyselfFixLeftRight */
        UPDATE T_USER_INFO 
           SET C_LEFT  = C_LEFT  - (#idif#)
             , C_RIGHT = C_RIGHT - (#idif#)
             , C_LEVEL = C_LEVEL - (#ldif#)
        <iterate prepend="WHERE C_ID IN" property="c_idsByChildNodeFromNodeById" open="(" close=")" conjunction=",">
               #c_idsByChildNodeFromNodeById[]#
        </iterate>
    </update>


    <insert id="addMyselfFromJstree" parameterClass="User">
        /* addMyselfFromJstree */
        INSERT INTO T_USER_INFO ( C_ID, C_PARENTID, C_POSITION, C_LEFT, C_RIGHT, C_LEVEL, C_TITLE, C_USER_GRADE_CD, C_JOIN_STATE_CD, C_PASSWORD, C_EMAIL, C_LOGIN_FAILURE_CNT, C_PASSWORD_FIND_QUESTION, C_PASSWORD_FIND_ANSWER, C_MAILING_SERVICE_USE_FL, C_INDI_INFO_OPEN_FL, C_JOIN_DT, C_PASSWORD_CHANGE_DT, C_HOMEPAGE_URL, C_BLOG_URL, C_SIGN, C_PROFILE_PHOTO, C_IMAGE_ICON )
                         VALUES ( S_USER_INFO.NEXTVAL, #c_parentid#, #c_position#, #c_left#, #c_right#, #c_level#, #c_title#, #userGradeCd#, #joinStateCd#, #password#, #email#, #loginFailureCnt#, #passwordFindQuestion#, #passwordFindAnswer#, #mailingServiceUseFl#, #indiInfoOpenFl#, #joinDt#, #passwordChangeDt#, #homepageUrl#, #blogUrl#, #sign#, #profilePhoto#, #imageIcon# )
        <selectKey resultClass="java.lang.Integer">
            /* addMyselfFromJstree SEQ */
            SELECT S_USER_INFO.CURRVAL AS SEQ
              FROM DUAL
        </selectKey>
    </insert>


    <update id="alterNodeType" parameterClass="User">
        /* alterNodeType */
        UPDATE T_USER_INFO 
           SET C_TYPE = #c_type#
         WHERE C_ID = #c_id#
    </update>


    <update id="fixCopyIF" parameterClass="User">
        /* fixCopyIF */
        UPDATE T_USER_INFO 
           SET C_POSITION = #fixCopyPosition# 
         WHERE C_ID = #fixCopyId#
    </update>


    <update id="fixCopy" parameterClass="User">
        /* fixCopy */
        UPDATE T_USER_INFO 
           SET C_PARENTID = #fixCopyId# 
         WHERE C_ID = #c_id#
    </update>
</sqlMap>