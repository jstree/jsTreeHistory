<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd
    http://www.springframework.org/schema/security/oauth
    http://www.springframework.org/schema/security/spring-security-oauth-1.0.xsd
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
    ">     
<!--
================================================(s)oauth1=================================================
-->	

	<!-- (s) OAuth1 consumer -->
	<!-- 1. oauth 서비스를 사용하는 리소스 들을 등록함 -->
	<oauth:consumer resource-details-service-ref="resourceDetails" oauth-failure-page="/oauth_error.jsp">
	  <oauth:url pattern="/oauth1/sparklr/**" resources="sparklrPhotos"/>
	  <oauth:url pattern="/oauth1/google/**" resources="google"/>
	  <oauth:url pattern="/oauth1/twitter/**" resources="twitter"/>
	</oauth:consumer>

	<!-- 2. oauth 서비스를 사용하는 리소스 상세 정보들( provider 정보 ) -->
	<oauth:resource-details-service id="resourceDetails">
	  <!-- local provider info -->
	  <oauth:resource id="sparklrPhotos"
	                  key="tonr-consumer-key"
	                  secret="SHHHHH!!!!!!!!!!"
	                  request-token-url="http://localhost:8080/sparklr/oauth/request_token"
	                  user-authorization-url="http://localhost:8080/sparklr/oauth/confirm_access"
	                  access-token-url="http://localhost:8080/sparklr/oauth/access_token"/>
	  <!--see http://code.google.com/apis/accounts/docs/OAuth_ref.html-->
	  <oauth:resource id="google" key="anonymous" secret="anonymous"
	                  request-token-url="https://www.google.com/accounts/OAuthGetRequestToken"
	                  user-authorization-url="https://www.google.com/accounts/OAuthAuthorizeToken"
	                  access-token-url="https://www.google.com/accounts/OAuthGetAccessToken"
	                  request-token-method="GET"
	                  access-token-method="GET">
	    <oauth:addtionalParameter name="scope" value="https://picasaweb.google.com/data/"/>
	    <oauth:addtionalParameter name="xoauth_displayname" value="Tonr Example Application"/>
	  </oauth:resource>
	  
	  <oauth:resource id="twitter" key="HG4CVP4xGFfw3RAaSLn8voxRM" secret="GScpVLuLZDgJyawo762UQLMoJi8FpY0Qzhs1W5e8hMBIxsSaeM"
	                  request-token-url="https://api.twitter.com/oauth/request_token"
	                  user-authorization-url="https://api.twitter.com/oauth/authorize"
	                  access-token-url="https://api.twitter.com/oauth/access_token"
	                  user-authorization-callback-param="http://127.0.0.1/twitter"
	                  request-token-method="GET"
	                  access-token-method="GET"
	                  >
	  </oauth:resource>
	</oauth:resource-details-service>
 
 	<!-- 3. oauth 원격지 provider service 등록(REST TEMPLATE 를 사용하기 위하여 리소스 등록) -->
	<beans:bean id="oauth1Service" class="standard.mvc.component.sec.oauth1.consumer.service.OAuth1ServiceImpl">
		<beans:property name="googleRestTemplate">
			<beans:bean class="org.springframework.security.oauth.consumer.client.OAuthRestTemplate">
				<beans:constructor-arg ref="google" />
			</beans:bean>
		</beans:property>
		<beans:property name="twitterRestTemplate">
			<beans:bean class="org.springframework.security.oauth.consumer.client.OAuthRestTemplate">
				<beans:constructor-arg ref="twitter" />
			</beans:bean>
		</beans:property>
	</beans:bean>
	
	<!-- 3. oauth 로컬  provider service 등록(REST TEMPLATE 를 사용하기 위하여 리소스 등록) -->
	<beans:bean id="sparklrService" class="standard.mvc.component.sec.oauth1.consumer.service.SparklrServiceImpl">
		<beans:property name="sparklrPhotoListURL" value="http://localhost:8080/sparklr/photos?format=xml" />
		<beans:property name="sparklrPhotoURLPattern" value="http://localhost:8080/sparklr/photos/%s" />
		<beans:property name="sparklrRestTemplate">
			<beans:bean class="org.springframework.security.oauth.consumer.client.OAuthRestTemplate">
				<beans:constructor-arg ref="sparklrPhotos" />
			</beans:bean>
		</beans:property>
	</beans:bean>
	
	<!-- (e)OAuth1 consumer setting -->
<!--
================================================(e) oauth1=================================================
-->	
</beans:beans>